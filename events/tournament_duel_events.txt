# New events by jordarkelf for the Duel Engine tournament system

namespace = joust

character_event = { # Tournament Joust Start (hidden)
	id = joust.0
	desc = EVTDESCjoust.0
	picture = GFX_evt_joust
	
	hide_FROM = yes
	
	capable_only = yes
	min_age = 15
		
	trigger = {
		prisoner = no
		is_pregnant = no
		is_maimed_trigger = no
		NOT = { check_variable = { which = tournament_rounds value = 8 } }
		NOT = { check_variable = { which = tournament_loss value = 2 } }
		has_character_flag = attending_tournament
		NOT = { has_character_flag = tournament_spectator }
		NOT = { has_character_modifier = jousting }
		NOT = { has_character_flag = no_more_jousts }
		NOT = { has_character_flag = winner }
		NOT = { has_character_flag = second_place }
		NOT = { has_character_flag = third_place }
		OR = {
			NOT = { has_character_flag = jousted_tournament }
			had_character_flag = { flag = jousted_tournament days = 30 }
		}
		OR = {
			AND = {
				has_character_flag = epic_tournament
				has_character_flag = tourny_in_progress
				has_character_flag = tournament_begins
				NOT = { has_character_flag = third_place }
				NOT = { has_character_flag = tournament_has_ended }
			}
			top_liege = {
				has_character_flag = epic_tournament
				has_character_flag = tourny_in_progress
				has_character_flag = tournament_begins
				NOT = { has_character_flag = third_place }
				NOT = { has_character_flag = tournament_has_ended }
			}
			top_liege = {
				any_realm_lord = {
						has_character_flag = epic_tournament
					has_character_flag = tourny_in_progress
						has_character_flag = tournament_begins
					NOT = { has_character_flag = third_place }
					NOT = { has_character_flag = tournament_has_ended }
				}
			}
		}
		top_liege = {
			any_realm_character = {
				prisoner = no
				is_pregnant = no
				age = 15
				NOT = { trait = incapable }
				is_maimed_trigger = no
				OR = {
					ai = yes
					ROOT = { ai = yes }
				}
				NOT = { check_variable = { which = tournament_rounds value = 8 } }
				NOT = { check_variable = { which = tournament_loss value = 2 } }
				has_character_flag = attending_tournament
				NOT = { has_character_flag = tournament_spectator }
				OR = {
					AND = {
						has_character_flag = king_tourny
						ROOT = { has_character_flag = king_tourny }
					}
					AND = {
						has_character_flag = grand_tourny
						ROOT = { has_character_flag = grand_tourny }
					}
					AND = {
						has_character_flag = normal_tourny
						ROOT = { has_character_flag = normal_tourny }
					}
					AND = {
						has_character_flag = small_tourny
						ROOT = { has_character_flag = small_tourny }
					}
				}
				NOT = { has_opinion_modifier = { who = ROOT modifier = opinion_jousting_target } }
				NOT = { character = ROOT }
				NOT = { has_character_flag = winner }
				NOT = { has_character_flag = second_place }
				NOT = { has_character_flag = third_place }
				NOT = { has_character_flag = no_more_jousts }
				NOT = { has_character_modifier = jousting }
				OR = {
					NOT = { has_character_flag = jousted_tournament }
					had_character_flag = { flag = jousted_tournament days = 30 }
				}
			}
		}				
	}
	
	mean_time_to_happen = {
		days = 30
		modifier = {
			factor = 0.1 #Within 3 days of start if no rounds jousted yet
			NOT = { check_variable = { which = tournament_rounds value = 1 } }
		}
	}	
	
	immediate = {
		# Target lock
		add_character_modifier = {
			name = jousting
			duration = 20
		}
		top_liege = {
			random_realm_character = {
				limit = { 
					prisoner = no
					is_pregnant = no
					age = 15
					NOT = { trait = incapable }
					is_maimed_trigger = no
					OR = { 
						ai = yes
						ROOT = { ai = yes }
					}
					NOT = { check_variable = { which = tournament_rounds value = 8 } }
					NOT = { check_variable = { which = tournament_loss value = 2 } }
					has_character_flag = attending_tournament
					NOT = { has_character_flag = tournament_spectator }
					OR = {
						AND = {
							has_character_flag = king_tourny
							ROOT = { has_character_flag = king_tourny }
						}
						AND = {
							has_character_flag = grand_tourny
							ROOT = { has_character_flag = grand_tourny }
						}
						AND = {
							has_character_flag = normal_tourny
							ROOT = { has_character_flag = normal_tourny }
						}
						AND = {
							has_character_flag = small_tourny
							ROOT = { has_character_flag = small_tourny }
						}
					}
					NOT = { has_opinion_modifier = { who = ROOT modifier = opinion_jousting_target } }
					NOT = { character = ROOT }
					NOT = { has_character_flag = winner }
					NOT = { has_character_flag = second_place }
					NOT = { has_character_flag = third_place }
					NOT = { has_character_flag = no_more_jousts }
					NOT = { has_character_modifier = jousting }
					OR = {
						NOT = { has_character_flag = jousted_tournament }
						had_character_flag = { flag = jousted_tournament days = 30 }
					}
				}
				opinion = { who = ROOT modifier = opinion_jousting_target }
				reverse_opinion = { who = ROOT modifier = opinion_jousting_target }
				add_character_modifier = {
					name = jousting
					duration = 30
				}
			}
		}
	}
	
	option = {
		name = OK
		top_liege = {
			random_realm_character = {
				limit = { has_opinion_modifier = { who = ROOT modifier = opinion_jousting_target } }
				hidden_tooltip = { character_event = { id = joust.1 } }
			}
		}
	}
}

character_event = {
	id = joust.1
	desc = EVTDESCjoust.1
	picture = GFX_evt_joust
	is_triggered_only = yes
	
	immediate = {
		# Remove targeting information
		remove_opinion = { who = FROM modifier = opinion_jousting_target }
		reverse_remove_opinion = { who = FROM modifier = opinion_jousting_target }
	}
	
	option = {
		name = EVTOPTAjoust.1
		FROM = { character_event = { id = joust.2 tooltip = EVTTOOLTIPjoust.2 } }
		ai_chance = {
			factor = 85
			modifier = {
				factor = 2
				trait = poor_warrior
			}
			modifier = {
				factor = 4
				trait = trained_warrior
			}
			modifier = {
				factor = 6
				trait = skilled_warrior
			}
			modifier = {
				factor = 8
				trait = master_warrior
			}
			modifier = {
				factor = 3
				trait = duelist
			}
			modifier = {
				factor = 3
				trait = brave
			}
			modifier = {
				factor = 2
				trait = proud
			}
			modifier = {
				factor = 1.5
				trait = wroth
			}
			modifier = {
				factor = 1.5
				trait = strong
			}
		}
	}
	
	option = {
		name = EVTOPTBjoust.1
		hidden_tooltip = { FROM = { character_event = { id = joust.3 } } }
		if = {
			limit = { 
				NOT = { trait = craven }
				NOT = { check_variable = { which = tournament_rounds value = 1 } } #someone who has jousted already is not a coward
			}
			random = {
				chance = 25
				add_trait = craven
			}
		}
		set_character_flag = no_more_jousts
		set_variable = { which = tournament_loss value = 2 }
		ai_chance = {
			factor = 15
			modifier = {
				factor = 2
				FROM = { trait = poor_warrior }
			}
			modifier = {
				factor = 3
				FROM = { trait = trained_warrior }
			}
			modifier = {
				factor = 4
				FROM = { trait = skilled_warrior }
			}
			modifier = {
				factor = 5
				FROM = { trait = master_warrior }
			}
			modifier = {
				factor = 2
				FROM = { trait = duelist }
			}
			modifier = {
				factor = 1.5
				FROM = { trait = strong }
			}
			modifier = {
				factor = 5
				trait = craven
			}
			modifier = {
				factor = 2
				trait = paranoid
			}
			modifier = {
				factor = 2
				trait = weak
			}
			modifier = {
				factor = 2
				trait = dwarf
			}
			modifier = {
				factor = 2
				trait = hunchback
			}
			modifier = {
				factor = 2
				trait = leper
			}
			modifier = {
				factor = 3
				trait = wounded
				NOT = { trait = lunatic }
				NOT = { trait = brave }
				NOT = { trait = proud }
				NOT = { trait = wroth }
			}
			modifier = {
				factor = 20
				trait = blinded
				NOT = { trait = lunatic }
				NOT = { trait = brave }
				NOT = { trait = proud }
				NOT = { trait = wroth }
			}
		}
	}
}

character_event = {
	id = joust.2
	desc = EVTDESCjoust.2
	picture = GFX_evt_joust
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAjoust.2
		
		# Set context flags for joust
		set_character_flag = flag_duel_friendly
		set_character_flag = flag_duel_tourney
		set_character_flag = tournament_jouster
		clr_character_flag = jousted_tournament
		FROM = { set_character_flag = flag_duel_friendly }
		FROM = { set_character_flag = flag_duel_tourney }
		FROM = { set_character_flag = tournament_jouster }
		FROM = { clr_character_flag = jousted_tournament }
		
		# Begin joust
		hidden_tooltip = { e_rebels = { holder_scope = { character_event = { id = duel.1 } } } }
		ai_chance = {
			factor = 85
			modifier = {
				factor = 2
				trait = poor_warrior
			}
			modifier = {
				factor = 4
				trait = trained_warrior
			}
			modifier = {
				factor = 6
				trait = skilled_warrior
			}
			modifier = {
				factor = 8
				trait = master_warrior
			}
			modifier = {
				factor = 3
				trait = duelist
			}
			modifier = {
				factor = 3
				trait = brave
			}
			modifier = {
				factor = 2
				trait = proud
			}
			modifier = {
				factor = 1.5
				trait = wroth
			}
			modifier = {
				factor = 1.5
				trait = strong
			}
		}
	}
	
	option = {
		name = EVTOPTBjoust.1
		hidden_tooltip = { FROM = { character_event = { id = joust.3 } } }
		if = {
			limit = { 
				NOT = { trait = craven }
				NOT = { check_variable = { which = tournament_rounds value = 1 } } #someone who has jousted already is not a coward
			}
			random = {
				chance = 25
				add_trait = craven
			}
		}
		set_character_flag = no_more_jousts
		set_variable = { which = tournament_loss value = 2 }
		ai_chance = {
			factor = 15
			modifier = {
				factor = 2
				FROM = { trait = poor_warrior }
			}
			modifier = {
				factor = 3
				FROM = { trait = trained_warrior }
			}
			modifier = {
				factor = 4
				FROM = { trait = skilled_warrior }
			}
			modifier = {
				factor = 5
				FROM = { trait = master_warrior }
			}
			modifier = {
				factor = 2
				FROM = { trait = duelist }
			}
			modifier = {
				factor = 1.5
				FROM = { trait = strong }
			}
			modifier = {
				factor = 3
				trait = craven
			}
			modifier = {
				factor = 2
				trait = paranoid
			}
			modifier = {
				factor = 2
				trait = weak
			}
			modifier = {
				factor = 2
				trait = dwarf
			}
			modifier = {
				factor = 2
				trait = hunchback
			}
			modifier = {
				factor = 2
				trait = leper
			}
			modifier = {
				factor = 3
				trait = wounded
				NOT = { trait = lunatic }
				NOT = { trait = brave }
				NOT = { trait = proud }
				NOT = { trait = wroth }
			}
			modifier = {
				factor = 20
				trait = blinded
				NOT = { trait = lunatic }
				NOT = { trait = brave }
				NOT = { trait = proud }
				NOT = { trait = wroth }
			}
		}
	}
}

character_event = { #Opponent Stands Down
	id = joust.3
	desc = EVTDESCjoust.3
	picture = GFX_evt_joust
	is_triggered_only = yes
	
	option = {
		name = OK
		FROM = { change_variable = { which = tournament_win value = 0.5 } }
	}
}

# Tournament round end - no wound
character_event = {
	id = joust.10
	is_triggered_only = yes
	
	hide_window = yes
	
	immediate = {
		hidden_tooltip = { 
			FROM = { set_character_flag = jousted_tournament }
			FROM = { change_variable = { which = tournament_win value = 1 } }
			FROM = { change_variable = { which = tournament_rounds value = 1 } }
			FROMFROM = { set_character_flag = jousted_tournament }
			FROMFROM = { change_variable = { which = tournament_loss value = 1 } }
			FROMFROM = { change_variable = { which = tournament_rounds value = 1 } }
		}
		prestige = 0
	}
}

# Tournament round end - wounded
character_event = {
	id = joust.11
	desc = EVTDESCjoust.11
	picture = GFX_evt_joust
	is_triggered_only = yes
	
	option = {
		name = OK
		hidden_tooltip = {
			FROM = { set_character_flag = jousted_tournament }
			FROM = { change_variable = { which = tournament_win value = 1 } }
			FROM = { change_variable = { which = tournament_rounds value = 1 } }
			FROMFROM = { set_character_flag = jousted_tournament }
			FROMFROM = { change_variable = { which = tournament_loss value = 1 } }
			FROMFROM = { change_variable = { which = tournament_rounds value = 1 } }
			FROMFROM = { character_event = { id = 70011 days = 1 } }
		}
		prestige = 0
	}
}

# Tournament round end - maimed
character_event = {
	id = joust.12
	desc = EVTDESCjoust.12
	picture = GFX_evt_joust
	is_triggered_only = yes
	
	option = {
		name = OK
		hidden_tooltip = {
			FROM = { set_character_flag = jousted_tournament }
			FROM = { change_variable = { which = tournament_win value = 1 } }
			FROM = { change_variable = { which = tournament_rounds value = 1 } }
			FROMFROM = { set_character_flag = jousted_tournament }
			FROMFROM = { change_variable = { which = tournament_loss value = 1 } }
			FROMFROM = { change_variable = { which = tournament_rounds value = 1 } }
			FROMFROM = { character_event = { id = 70010 days = 1 } }
		}
		prestige = 0
	}
}

# Tournament round end - killed
character_event = {
	id = joust.13
	desc = EVTDESCjoust.13
	picture = GFX_evt_joust
	is_triggered_only = yes
	
	option = {
		name = OK
		hidden_tooltip = {
			FROM = {
				set_character_flag = jousted_tournament
				change_variable = { which = tournament_win value = 1 }
				change_variable = { which = tournament_rounds value = 1 }
			}
			FROMFROM = {
				set_character_flag = jousted_tournament
				change_variable = { which = tournament_loss value = 1 }
				change_variable = { which = tournament_rounds value = 1 }
				character_event = { id = 70009 days = 1 }
			}
		}
		prestige = 0
	}
}

### Tournament Rival duel events

#Tournament rival duel result - draw
character_event = {
	id = joust.20
	desc = EVTDESCjoust.20
	picture = GFX_evt_battle
	is_triggered_only = yes
	
	option = {
		name = OK
		IF = { 
			limit = { FROM = { has_character_flag = tourny_duel_agressor } }
			FROM = { character_event = { id = 70066 } }
			FROMFROM = { character_event = { id = 70069 } }
		}
		IF = { 
			limit = { FROM = { has_character_flag = tourny_duel_defender } }
			FROM = { character_event = { id = 70069 } }
			FROMFROM = { character_event = { id = 70066 } }
		}
	}
}

#Tournament rival duel result - wounded, maimed, or killed
character_event = {
	id = joust.21
	desc = EVTDESCjoust.21
	picture = GFX_evt_battle
	is_triggered_only = yes
	
	option = {
		name = OK
		IF = { 
			limit = { FROM = { has_character_flag = tourny_duel_agressor } }
			FROM = { character_event = { id = 70065 } }
			FROMFROM = { character_event = { id = 70068 } }
		}
		IF = { 
			limit = { FROM = { has_character_flag = tourny_duel_defender } }
			FROM = { character_event = { id = 70067 } }
			FROMFROM = { character_event = { id = 70070 } }
		}
	}
}

character_event = {
	id = 70065
	desc = EVTDESC70065
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA70065
	}
}

character_event = {
	id = 70066
	desc = EVTDESC70066
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA70066
	}
}

character_event = {
	id = 70067
	desc = EVTDESC70067
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA70067
	}
}

character_event = {
	id = 70068
	desc = EVTDESC70068
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA70068
	}
}

character_event = {
	id = 70069
	desc = EVTDESC70069
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA70066
	}
}

character_event = {
	id = 70070
	desc = EVTDESC70070
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA70065
	}
}
